function getAddressType(a){return IPv4Format.test(a)?"IPv4":IPv6Format.test(a)?"IPv6":hostnameFormat.test(a)?"Hostname":"URL"}function getHostFromURI(a){var n=new URI(a).host();return n?n:a}function getHostnameFromURI(a){var n=new URI(a).hostname();return n?n:a}function getLinks(a,n,e){n||(n=""),e||(e="");for(var i=[],r=0;r<a.length;r++)i.push('<a href="'+n+IPv6Fix(a[r])+e+'" target="_blank">'+a[r]+"</a>");return i}function IPv6Fix(a){var n=/^([\da-fA-F]{0,4}:){3,7}[\da-fA-F]{0,4}$/;return n.test(a)?"["+a+"]":a}function formatRate(a,n,e,i){return n||(n=0),e||(e=units.rate[1]),formatUnitString(a,n,e,units.rate,i)}function formatSize(a,n,e,i){return n||(n=0),e||(e=units.size[1]),formatUnitString(a,n,e,units.size,i)}function formatSpeed(a,n,e,i){return n||(n=0),e||(e=units.speed[1]),formatUnitString(a,n,e,units.speed,i)}function formatUnitString(a,n,e,i,r){return a/=parseUnitPrefix($.trim(e),i,r),a||0===a?a.toFixed(n)+e:null}function parseMetricPrefix(a){var n=0;return a&&a.length>0&&(a.length>1?(a=a.toLowerCase(),n=3*($.inArray(a,metricPrefixes["long"])+1)):(a=a.toUpperCase(),n=3*($.inArray(a,metricPrefixes["short"])+1)),0===n)?0/0:Math.pow(10,n)}function parseRate(a,n){return parseUnitString(a,units.rate,n)}function parseSize(a,n){return parseUnitString(a,units.size,n)}function parseSpeed(a,n){return parseUnitString(a,units.speed,n)}function parseUnitPrefix(a,n,e){var i=new RegExp("^(.+)?("+n.join("|")+")$","i"),r=a.match(i);return r?parseMetricPrefix(r[1]):e?parseMetricPrefix(a):0/0}function parseUnitString(a,n,e){var i=/^(\d+\.?\d*|\.\d+)(.+)?$/,r=a.match(i);if(!r)return 0/0;var t=parseFloat(r[1]);return t*=parseUnitPrefix($.trim(r[2]),n,e)}function getCountryString(a){return countryCodes[a]?countryCodes[a]:a}function getStateString(a){return stateCodes[a]?stateCodes[a]:a}function hashToQuery(a){var n="",e=[];for(var i in a){var r="";r=a[i]instanceof Array?a[i].join(","):a[i],e.push(encodeURIComponent(i)+"="+encodeURIComponent(r))}return n+=e.join("&")}function queryToHash(a){for(var n={},e=a.substring(1).split("&"),i=0;i<e.length;i++){var r=e[i].split("=");if(r[0]){var t=decodeURIComponent(r[0]),o=[];r.length>1&&(o=decodeURIComponent(r[1]).split(",")),n[t]=o}}return n}function compareHostnames(a,n){a=a.replace(/(-v6|-ip6|-ipv6)/i,"~"),n=n.replace(/(-v6|-ip6|-ipv6)/i,"~");var e=sortOrder.hostname[getAddressType(a)],i=sortOrder.hostname[getAddressType(n)];return e>i?1:i>e?-1:a>n?1:n>a?-1:0}var countryCodes={AC:"Ascension Island",AD:"Andorra",AE:"United Arab Emirates",AF:"Afghanistan",AG:"Antigua and Barbuda",AI:"Anguilla",AL:"Albania",AM:"Armenia",AO:"Angola",AQ:"Antarctica",AR:"Argentina",AS:"American Samoa",AT:"Austria",AU:"Australia",AW:"Aruba",AX:"Åland Islands",AZ:"Azerbaijan",BA:"Bosnia and Herzegovina",BB:"Barbados",BD:"Bangladesh",BE:"Belgium",BF:"Burkina Faso",BG:"Bulgaria",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BL:"Saint Barthélemy",BM:"Bermuda",BN:"Brunei Darussalam",BO:"Plurinational State of Bolivia",BQ:"Bonaire, Sint Eustatius and Saba",BR:"Brazil",BS:"Bahamas",BT:"Bhutan",BV:"Bouvet Island",BW:"Botswana",BY:"Belarus",BZ:"Belize",CA:"Canada",CC:"Cocos (Keeling) Islands",CD:"The Democratic Republic of the Congo",CF:"Central African Republic",CG:"Congo",CH:"Switzerland",CI:"Côte d'Ivoire",CK:"Cook Islands",CL:"Chile",CM:"Cameroon",CN:"China",CO:"Colombia",CP:"Clipperton Island",CR:"Costa Rica",CU:"Cuba",CV:"Cabo Verde",CW:"Curaçao",CX:"Christmas Island",CY:"Cyprus",CZ:"Czech Republic",DE:"Germany",DG:"Diego Garcia",DJ:"Djibouti",DK:"Denmark",DM:"Dominica",DO:"Dominican Republic",DZ:"Algeria",EA:"Ceuta and Melilla",EC:"Ecuador",EE:"Estonia",EG:"Egypt",EH:"Western Sahara",ER:"Eritrea",ES:"Spain",ET:"Ethiopia",EU:"European Union",FI:"Finland",FJ:"Fiji",FK:"Falkland Islands (Malvinas)",FM:"Federated States of Micronesia",FO:"Faroe Islands",FR:"France",GA:"Gabon",GB:"United Kingdom",GD:"Grenada",GE:"Georgia",GF:"French Guiana",GG:"Guernsey",GH:"Ghana",GI:"Gibraltar",GL:"Greenland",GM:"Gambia",GN:"Guinea",GP:"Guadeloupe",GQ:"Equatorial Guinea",GR:"Greece",GS:"South Georgia and the South Sandwich Islands",GT:"Guatemala",GU:"Guam",GW:"Guinea-Bissau",GY:"Guyana",HK:"Hong Kong",HM:"Heard Island and McDonald Islands",HN:"Honduras",HR:"Croatia",HT:"Haiti",HU:"Hungary",IC:"Canary Islands",ID:"Indonesia",IE:"Ireland",IL:"Israel",IM:"Isle of Man",IN:"India",IO:"British Indian Ocean Territory",IQ:"Iraq",IR:"Islamic Republic of Iran",IS:"Iceland",IT:"Italy",JE:"Jersey",JM:"Jamaica",JO:"Jordan",JP:"Japan",KE:"Kenya",KG:"Kyrgyzstan",KH:"Cambodia",KI:"Kiribati",KM:"Comoros",KN:"Saint Kitts and Nevis",KP:"Democratic People's Republic of Korea",KR:"Republic of Korea",KW:"Kuwait",KY:"Cayman Islands",KZ:"Kazakhstan",LA:"Lao People's Democratic Republic",LB:"Lebanon",LC:"Saint Lucia",LI:"Liechtenstein",LK:"Sri Lanka",LR:"Liberia",LS:"Lesotho",LT:"Lithuania",LU:"Luxembourg",LV:"Latvia",LY:"Libya",MA:"Morocco",MC:"Monaco",MD:"Republic of Moldova",ME:"Montenegro",MF:"Saint Martin (French part)",MG:"Madagascar",MH:"Marshall Islands",MK:"The former Yugoslav Republic of Macedonia",ML:"Mali",MM:"Myanmar",MN:"Mongolia",MO:"Macao",MP:"Northern Mariana Islands",MQ:"Martinique",MR:"Mauritania",MS:"Montserrat",MT:"Malta",MU:"Mauritius",MV:"Maldives",MW:"Malawi",MX:"Mexico",MY:"Malaysia",MZ:"Mozambique",NA:"Namibia",NC:"New Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NI:"Nicaragua",NL:"Netherlands",NO:"Norway",NP:"Nepal",NR:"Nauru",NU:"Niue",NZ:"New Zealand",OM:"Oman",PA:"Panama",PE:"Peru",PF:"French Polynesia",PG:"Papua New Guinea",PH:"Philippines",PK:"Pakistan",PL:"Poland",PM:"Saint Pierre and Miquelon",PN:"Pitcairn",PR:"Puerto Rico",PS:"State of Palestine",PT:"Portugal",PW:"Palau",PY:"Paraguay",QA:"Qatar",RE:"Réunion",RO:"Romania",RS:"Serbia",RU:"Russian Federation",RW:"Rwanda",SA:"Saudi Arabia",SB:"Solomon Islands",SC:"Seychelles",SD:"Sudan",SE:"Sweden",SG:"Singapore",SH:"Saint Helena, Ascension and Tristan da Cunha",SI:"Slovenia",SJ:"Svalbard and Jan Mayen",SK:"Slovakia",SL:"Sierra Leone",SM:"San Marino",SN:"Senegal",SO:"Somalia",SR:"Suriname",SS:"South Sudan",ST:"Sao Tome and Principe",SV:"El Salvador",SX:"Sint Maarten (Dutch part)",SY:"Syrian Arab Republic",SZ:"Swaziland",TA:"Tristan da Cunha",TC:"Turks and Caicos Islands",TD:"Chad",TF:"French Southern Territories",TG:"Togo",TH:"Thailand",TJ:"Tajikistan",TK:"Tokelau",TL:"Timor-Leste",TM:"Turkmenistan",TN:"Tunisia",TO:"Tonga",TR:"Turkey",TT:"Trinidad and Tobago",TV:"Tuvalu",TW:"Taiwan, Province of China",TZ:"United Republic of Tanzania",UA:"Ukraine",UG:"Uganda",UK:"United Kingdom",UM:"United States Minor Outlying Islands",US:"United States",UY:"Uruguay",UZ:"Uzbekistan",VA:"Holy See (Vatican City State)",VC:"Saint Vincent and the Grenadines",VE:"Bolivarian Republic of Venezuela",VG:"British Virgin Islands",VI:"United States Virgin Islands",VN:"Viet Nam",VU:"Vanuatu",WF:"Wallis and Futuna",WS:"Samoa",YE:"Yemen",YT:"Mayotte",ZA:"South Africa",ZM:"Zambia",ZW:"Zimbabwe"},stateCodes={AK:"Alaska",AL:"Alabama",AR:"Arkansas",AS:"American Samoa",AZ:"Arizona",CA:"California",CO:"Colorado",CT:"Connecticut",DC:"District of Columbia",DE:"Delaware",FL:"Florida",GA:"Georgia",GU:"Guam",HI:"Hawaii",IA:"Iowa",ID:"Idaho",IL:"Illinois",IN:"Indiana",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",MA:"Massachusetts",MD:"Maryland",ME:"Maine",MI:"Michigan",MN:"Minnesota",MO:"Missouri",MP:"Northern Mariana Islands",MS:"Mississippi",MT:"Montana",NC:"North Carolina",ND:"North Dakota",NE:"Nebraska",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NV:"Nevada",NY:"New York",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PA:"Pennsylvania",PR:"Puerto Rico",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UM:"United States Minor Outlying Islands",UT:"Utah",VA:"Virginia",VI:"United States Virgin Islands",VT:"Vermont",WA:"Washington",WI:"Wisconsin",WV:"West Virginia",WY:"Wyoming"},IPv4Format=/^([\d]{1,3}\.){3}[\d]{1,3}(:\d+)?$/,IPv6Format=/^(([\da-fA-F]{0,4}:){3,7}[\da-fA-F]{0,4}|\[([\da-fA-F]{0,4}:){3,7}[\da-fA-F]{0,4}\](:\d+)?)$/,hostnameFormat=/^[A-Za-z0-9]+((\-|\.)[A-Za-z0-9]+)*(:\d+)?$/,sortOrder={hostname:{Hostname:0,URL:0,IPv4:1,IPv6:2}},metricPrefixes={"short":["K","M","G","T","P","E","Z","Y"],"long":["kilo","mega","giga","tera","peta","exa","zetta","yotta"]},units={rate:["b/s","bit/s","bps"],size:["byte","bytes","B"],speed:["hertz","Hz"]};Array.prototype.equals=function(a){if(this.length!=a.length)return!1;for(var n=0;n<this.length;n++)if(this[n]!==a[n])return!1;return!0},Array.prototype.contains=function(a){for(var n=0;n<this.length;n++)if(this[n]===a)return!0;return!1},Array.prototype.unique=function(){for(var a=[],n=0;n<this.length;n++)a.contains(this[n])||a.push(this[n]);return a};